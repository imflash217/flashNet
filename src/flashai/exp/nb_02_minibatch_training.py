
##########################################
###### This file was autogenerated. ######
######### DO NOT EDIT this file. #########
##########################################
### file to edit: dev_nb/imflash217__02_minibatch_training.ipynb ####

from exp.nb_02_full_connected import *
import torch.nn.functional as F

def accuracy(preds, labels):
    return (torch.argmax(preds, dim=1) == labels).float().mean()

from torch import optim

class Dataset():
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __len__(self):
        return len(self.x)

    def __getitem__(self, idx):
        return self.x[idx], self.y[idx]


class Dataloader():
    def __init__(self, ds, bs):
        self.ds = ds
        self.bs = bs

    def __iter__(self):
        for i in range(0, len(self.ds), self.bs):
            yield self.ds[i : i+self.bs]


from torch.utils.data import DataLoader, SequentialSampler, RandomSampler

def get_dls(train_ds, valid_ds, bs, **kwargs):
    return (DataLoader(dataset=train_ds, batch_size=bs, shuffle=True, **kwargs),
            DataLoader(dataset=valid_ds, batch_size=bs*2, shuffle=False, **kwargs))